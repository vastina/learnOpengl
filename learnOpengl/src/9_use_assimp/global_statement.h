#ifndef _GLOBAL__STATEMENT_H_
#define _GLOBAL__STATEMENT_H_

#include <glm/glm.hpp>

const int screenwidth = 800; 
const int screenheight = 800;
double lastX = (double)screenwidth / 2.0;
double lastY = (double)screenheight / 2.0;
const static double pi = 3.1415926;
/*
double sensitivity = 0.013;  
float cameraspeed = 0.1;
glm::vec3 ws = glm::vec3(0.0, 0.0, -1.0f);
glm::vec3 ad = glm::vec3(-1.0f, 0.0, 0.0);
float yaw = -90.0f, dyaw = 0.0;
float pitch = 0.0f, dpitch = 0.0;
float fov = 45.0f;
glm::vec3 camerapos = glm::vec3(0.0, 0.0, -4.0f);

glm::vec3 cameraPos = glm::vec3(0.0f, 0.0f, 3.0f);
glm::vec3 cameraFront = glm::vec3(0.0f, 0.0f, -1.0f);
glm::vec3 cameraUp = glm::vec3(0.0f, 1.0f, 0.0f);
bool firstMouse = true;*/


float deltaTime = 0.0f;	
float lastFrame = 0.0f;

float vertices[] = {
		-0.3f, -0.3f, -0.3f,  0.0f, 0.0f, 1.0f, 1.0f, 1.0f,	0.0f,  0.0f, -1.0f,
		 0.3f, -0.3f, -0.3f,  1.0f, 0.0f, 1.0f, 1.0f, 1.0f, 0.0f,  0.0f, -1.0f,
		 0.3f,  0.3f, -0.3f,  1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f,  0.0f, -1.0f,
		 0.3f,  0.3f, -0.3f,  1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f,  0.0f, -1.0f,
		-0.3f,  0.3f, -0.3f,  0.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f,  0.0f, -1.0f,
		-0.3f, -0.3f, -0.3f,  0.0f, 0.0f, 1.0f, 1.0f, 1.0f, 0.0f,  0.0f, -1.0f,

		-0.3f, -0.3f,  0.3f,  0.0f, 0.0f, 1.0f, 1.0f, 1.0f, 0.0f,  0.0f, 1.0f,
		 0.3f, -0.3f,  0.3f,  1.0f, 0.0f, 1.0f, 1.0f, 1.0f, 0.0f,  0.0f, 1.0f,
		 0.3f,  0.3f,  0.3f,  1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f,  0.0f, 1.0f,
		 0.3f,  0.3f,  0.3f,  1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f,  0.0f, 1.0f,
		-0.3f,  0.3f,  0.3f,  0.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f,  0.0f, 1.0f,
		-0.3f, -0.3f,  0.3f,  0.0f, 0.0f, 1.0f, 1.0f, 1.0f, 0.0f,  0.0f, 1.0f,

		-0.3f,  0.3f,  0.3f,  1.0f, 0.0f, 1.0f, 1.0f, 1.0f, -1.0f,  0.0f,  0.0f,
		-0.3f,  0.3f, -0.3f,  1.0f, 1.0f, 1.0f, 1.0f, 1.0f, -1.0f,  0.0f,  0.0f,
		-0.3f, -0.3f, -0.3f,  0.0f, 1.0f, 1.0f, 1.0f, 1.0f, -1.0f,  0.0f,  0.0f,
		-0.3f, -0.3f, -0.3f,  0.0f, 1.0f, 1.0f, 1.0f, 1.0f, -1.0f,  0.0f,  0.0f,
		-0.3f, -0.3f,  0.3f,  0.0f, 0.0f, 1.0f, 1.0f, 1.0f, -1.0f,  0.0f,  0.0f,
		-0.3f,  0.3f,  0.3f,  1.0f, 0.0f, 1.0f, 1.0f, 1.0f, -1.0f,  0.0f,  0.0f,

		 0.3f,  0.3f,  0.3f,  1.0f, 0.0f, 1.0f, 1.0f, 1.0f, 1.0f,  0.0f,  0.0f,
		 0.3f,  0.3f, -0.3f,  1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,  0.0f,  0.0f,
		 0.3f, -0.3f, -0.3f,  0.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,  0.0f,  0.0f,
		 0.3f, -0.3f, -0.3f,  0.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f,  0.0f,  0.0f,
		 0.3f, -0.3f,  0.3f,  0.0f, 0.0f, 1.0f, 1.0f, 1.0f, 1.0f,  0.0f,  0.0f,
		 0.3f,  0.3f,  0.3f,  1.0f, 0.0f, 1.0f, 1.0f, 1.0f, 1.0f,  0.0f,  0.0f,

		-0.3f, -0.3f, -0.3f,  0.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f, -1.0f,  0.0f,
		 0.3f, -0.3f, -0.3f,  1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f, -1.0f,  0.0f,
		 0.3f, -0.3f,  0.3f,  1.0f, 0.0f, 1.0f, 1.0f, 1.0f, 0.0f, -1.0f,  0.0f,
		 0.3f, -0.3f,  0.3f,  1.0f, 0.0f, 1.0f, 1.0f, 1.0f, 0.0f, -1.0f,  0.0f,
		-0.3f, -0.3f,  0.3f,  0.0f, 0.0f, 1.0f, 1.0f, 1.0f, 0.0f, -1.0f,  0.0f,
		-0.3f, -0.3f, -0.3f,  0.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f, -1.0f,  0.0f,

		-0.3f,  0.3f, -0.3f,  0.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f,  1.0f,  0.0f,
		 0.3f,  0.3f, -0.3f,  1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f,  1.0f,  0.0f,
		 0.3f,  0.3f,  0.3f,  1.0f, 0.0f, 1.0f, 1.0f, 1.0f, 0.0f,  1.0f,  0.0f,
		 0.3f,  0.3f,  0.3f,  1.0f, 0.0f, 1.0f, 1.0f, 1.0f, 0.0f,  1.0f,  0.0f,
		-0.3f,  0.3f,  0.3f,  0.0f, 0.0f, 1.0f, 1.0f, 1.0f, 0.0f,  1.0f,  0.0f,
		-0.3f,  0.3f, -0.3f,  0.0f, 1.0f, 1.0f, 1.0f, 1.0f, 0.0f,  1.0f,  0.0f,
};

float lightvertices[] = {
		-0.5f, -0.5f, -0.5f,
		 0.5f, -0.5f, -0.5f,
		 0.5f,  0.5f, -0.5f,
		 0.5f,  0.5f, -0.5f,
		-0.5f,  0.5f, -0.5f,
		-0.5f, -0.5f, -0.5f,

		-0.5f, -0.5f,  0.5f,
		 0.5f, -0.5f,  0.5f,
		 0.5f,  0.5f,  0.5f,
		 0.5f,  0.5f,  0.5f,
		-0.5f,  0.5f,  0.5f,
		-0.5f, -0.5f,  0.5f,

		-0.5f,  0.5f,  0.5f,
		-0.5f,  0.5f, -0.5f,
		-0.5f, -0.5f, -0.5f,
		-0.5f, -0.5f, -0.5f,
		-0.5f, -0.5f,  0.5f,
		-0.5f,  0.5f,  0.5f,

		 0.5f,  0.5f,  0.5f,
		 0.5f,  0.5f, -0.5f,
		 0.5f, -0.5f, -0.5f,
		 0.5f, -0.5f, -0.5f,
		 0.5f, -0.5f,  0.5f,
		 0.5f,  0.5f,  0.5f,

		-0.5f, -0.5f, -0.5f,
		 0.5f, -0.5f, -0.5f,
		 0.5f, -0.5f,  0.5f,
		 0.5f, -0.5f,  0.5f,
		-0.5f, -0.5f,  0.5f,
		-0.5f, -0.5f, -0.5f,

		-0.5f,  0.5f, -0.5f,
		 0.5f,  0.5f, -0.5f,
		 0.5f,  0.5f,  0.5f,
		 0.5f,  0.5f,  0.5f,
		-0.5f,  0.5f,  0.5f,
		-0.5f,  0.5f, -0.5f,
};

glm::vec3 cubePositions[] = {
		glm::vec3(0.0f,  0.0f, 2.0f),
		glm::vec3(2.0f,  5.0f, -15.0f),
		glm::vec3(-1.5f, -2.2f, -2.5f),
		glm::vec3(-3.8f, -2.0f, -12.3f),
		glm::vec3(2.4f, -0.4f, -3.5f),
		glm::vec3(-1.7f,  3.0f, -7.5f),
		glm::vec3(1.3f, -2.0f, -2.5f),
		glm::vec3(1.5f,  2.0f, -2.5f),
		glm::vec3(1.5f,  0.2f, -1.5f),
		glm::vec3(-1.3f,  1.0f, -1.5f)
};

glm::vec3 pointLightPositions[] = {
	glm::vec3(0.7f,  0.2f,  2.0f),
	glm::vec3(2.3f, -3.3f, -4.0f),
	glm::vec3(-4.0f,  2.0f, -12.0f),
	glm::vec3(0.0f,  0.0f, -3.0f)
};

glm::vec3 point_color[] = {
	glm::vec3(0.8, 0.3, 0.4),
	glm::vec3(0.7, 0.4, 0.3),
	glm::vec3(0.9, 0.3, 0.6),
	glm::vec3(0.8, 0.6, 0.2)
};

glm::vec3 sunambient = glm::vec3(1.0, 0.5, 0.2)* glm::vec3(0.1);
glm::vec3 sundiffuse = glm::vec3(1.0, 0.5, 0.2) * glm::vec3(0.4);
glm::vec3 sunspecular = glm::vec3(1.0, 1.0, 1.0);

struct Material
{
	glm::vec3 Ambient;
	glm::vec3 Diffuse;
	glm::vec3 Specular;
	float Shininess;
	Material(glm::vec3 a, glm::vec3 d, glm::vec3 s, float f) : Ambient(a), Diffuse(d), Specular(s), Shininess(f) {};
	float ambient() {
		return 
			(0.212671 * Ambient[0] + 0.715160 * Ambient[1] + 0.072169 * Ambient[2]) /
			(0.212671 * Diffuse[0] + 0.715160 * Diffuse[1] + 0.072169 * Diffuse[2]) ;
	}
};

Material emerald( glm::vec3(0.0215,0.1745,0.0215), glm::vec3(0.07568,0.61424,0.07568), glm::vec3(0.633,0.727811,0.633), 0.6 );
Material jade(glm::vec3(0.135, 0.2225, 0.1575), glm::vec3(0.54, 0.89, 0.63), glm::vec3(0.316228, 0.316228, 0.316228), 0.1);
Material obsidian(glm::vec3(0.05375, 0.05, 0.06625), glm::vec3(0.18275, 0.17, 0.22525), glm::vec3(0.332741, 0.328634, 0.346435), 0.3);
Material pearl(glm::vec3(0.25, 0.20725, 0.20725), glm::vec3(1, 0.829, 0.829), glm::vec3(0.296648, 0.296648, 0.296648), 0.088);
Material ruby(glm::vec3(0.1745, 0.01175, 0.01175), glm::vec3(0.61424, 0.04136, 0.04136), glm::vec3(0.727811, 0.626959, 0.626959), 0.6);
Material turquoise(glm::vec3(0.1, 0.18725, 0.1745), glm::vec3(0.396, 0.74151, 0.69102), glm::vec3(0.297254, 0.30829, 0.306678), 0.1);
Material brass(glm::vec3(0.32941, 0.22353, 0.02745), glm::vec3(0.78039, 0.56863, 0.11373), glm::vec3(0.992157, 0.941176, 0.807843), 0.21794872);
Material bronze(glm::vec3(0.2125, 0.1275, 0.054), glm::vec3(0.714, 0.4284, 0.18144), glm::vec3(0.393548, 0.271906, 0.166721), 0.2);
Material chrome(glm::vec3(0.25, 0.25, 0.25), glm::vec3(0.4, 0.4, 0.4), glm::vec3(0.77458, 0.774597, 0.774597), 0.6);
Material copper(glm::vec3(0.19125, 0.0735, 0.0225), glm::vec3(0.7038, 0.27048, 0.0828), glm::vec3(0.256777, 0.137622, 0.086014), 0.1);
Material gold(glm::vec3(0.24725, 0.1995, 0.0745), glm::vec3(0.75164, 0.60648, 0.22648), glm::vec3(0.628281, 0.555802, 0.366065), 0.4);
Material silver(glm::vec3(0.19225, 0.19225, 0.19225), glm::vec3(0.50754, 0.50754, 0.50754), glm::vec3(0.508273, 0.508273, 0.508273), 0.4);
Material black_plastic(glm::vec3(0.0, 0.0, 0.0), glm::vec3(0.01, 0.01, 0.01), glm::vec3(0.50, 0.50, 0.50), 0.25);
Material green_plastic(glm::vec3(0.0, 0.0, 0.0), glm::vec3(0.1, 0.35, 0.1), glm::vec3(0.45, 0.55, 0.45), 0.25);
Material red_plastic(glm::vec3(0.0, 0.0, 0.0), glm::vec3(0.5, 0.0, 0.0), glm::vec3(0.7, 0.6, 0.6), 0.25);
Material white_plastic(glm::vec3(0.0, 0.0, 0.0), glm::vec3(0.55, 0.55, 0.55), glm::vec3(0.70, 0.70, 0.70), 0.25);
Material yellow_plastic(glm::vec3(0.0, 0.0, 0.0), glm::vec3(0.5, 0.5, 0.0), glm::vec3(0.60, 0.60, 0.50), 0.25);
Material black_rubber(glm::vec3(0.02, 0.02, 0.02), glm::vec3(0.01, 0.01, 0.01), glm::vec3(0.4, 0.4, 0.4), 0.078125);
Material cyan_rubber(glm::vec3(0.0, 0.05, 0.05), glm::vec3(0.4, 0.5, 0.5), glm::vec3(0.04, 0.7, 0.7), 0.078125);
Material green_rubber(glm::vec3(0.0, 0.05, 0.0), glm::vec3(0.4, 0.5, 0.4), glm::vec3(0.04, 0.7, 0.04), 0.078125);
Material red_rubber(glm::vec3(0.05, 0.0, 0.0), glm::vec3(0.5, 0.4, 0.4), glm::vec3(0.7, 0.04, 0.04), 0.078125);
Material white_rubber(glm::vec3(0.05, 0.05, 0.05), glm::vec3(0.5, 0.5, 0.5), glm::vec3(0.7, 0.7, 0.7), 0.078125); 
Material yellow_rubber(glm::vec3(0.05, 0.05, 0.0), glm::vec3(0.5, 0.5, 0.4), glm::vec3(0.7, 0.7, 0.04), 0.078125);
Material cyan_plastic(glm::vec3(0.0, 0.1, 0.06), glm::vec3(0.0, 0.50980392, 0.50980392), glm::vec3(0.50196078, 0.50196078, 0.50196078), 0.25);
/*Name			------Ambient---------- --------Diffuse--------	------------Specular----------- Shininess
emerald			0.0215	0.1745	0.0215	0.07568	0.61424	0.07568	0.633		0.727811	0.633		0.6
jade			0.135	0.2225	0.1575	0.54	0.89	0.63	0.316228	0.316228	0.316228	0.1
obsidian		0.05375	0.05	0.06625	0.18275	0.17	0.22525	0.332741	0.328634	0.346435	0.3
pearl			0.25	0.20725	0.20725	1		0.829	0.829	0.296648	0.296648	0.296648	0.088
ruby			0.1745	0.01175	0.01175	0.61424	0.04136	0.04136	0.727811	0.626959	0.626959	0.6
turquoise		0.1		0.18725	0.1745	0.396	0.74151	0.69102	0.297254	0.30829		0.306678	0.1
brass			0.32941 0.22353 0.02745 0.78039 0.56863 0.11373 0.992157	0.941176	0.807843	0.21794872
bronze			0.2125	0.1275	0.054	0.714	0.4284	0.18144	0.393548	0.271906	0.166721	0.2
chrome			0.25	0.25	0.25	0.4		0.4		0.4		0.77458		0.774597	0.774597	0.6
copper			0.19125	0.0735	0.0225	0.7038	0.27048	0.0828	0.256777	0.137622	0.086014	0.1
gold			0.24725	0.1995	0.0745	0.75164	0.60648	0.22648	0.628281	0.555802	0.366065	0.4
silver			0.19225	0.19225	0.19225	0.50754	0.50754	0.50754	0.508273	0.508273	0.508273	0.4
black_plastic	0.0		0.0		0.0		0.01	0.01	0.01	0.50		0.50		0.50		0.25
green_plastic	0.0		0.0		0.0		0.1		0.35	0.1		0.45		0.55		0.45		0.25
red_plastic		0.0		0.0		0.0		0.5		0.0		0.0		0.7			0.6			0.6			0.25
white_plastic	0.0		0.0		0.0		0.55	0.55	0.55	0.70		0.70		0.70		0.25
yellow_plastic	0.0		0.0		0.0		0.5		0.5		0.0		0.60		0.60		0.50		0.25
black_rubber	0.02	0.02	0.02	0.01	0.01	0.01	0.4			0.4			0.4			0.078125
cyan_rubber		0.0		0.05	0.05	0.4		0.5		0.5		0.04		0.7			0.7			0.078125
green_rubber	0.0		0.05	0.0		0.4		0.5		0.4		0.04		0.7			0.04		0.078125
red_rubber		0.05	0.0		0.0		0.5		0.4		0.4		0.7			0.04		0.04		0.078125
white_rubber	0.05	0.05	0.05	0.5		0.5		0.5		0.7			0.7			0.7			0.078125
yellow_rubber	0.05	0.05	0.0		0.5		0.5		0.4		0.7			0.7			0.04		0.078125
cyan_plastic	0.0		0.1		0.06	0.0		0.50980392	0.50980392	0.50196078	0.50196078	0.50196078	0.25
http://devernay.free.fr/cours/opengl/materials.html
*/

/*
距离		常数项	一次项	二次项
7		1.0		0.7		1.8
13		1.0		0.35	0.44
20		1.0		0.22	0.20
32		1.0		0.14	0.07
50		1.0		0.09	0.032
65		1.0		0.07	0.017
100		1.0		0.045	0.0075
160		1.0		0.027	0.0028
200		1.0		0.022	0.0019
325		1.0		0.014	0.0007
600		1.0		0.007	0.0002
3250	1.0		0.0014	0.000007*/

/*θ		θ(角度)	ϕ(内光切)	ϕ(角度)	γ(内光切)	γ(角度)			ϵ						I
0.87	30		0.91		25		0.82		35		0.91 - 0.82 = 0.09		0.87 - 0.82 / 0.09 = 0.56
0.9		26		0.91		25		0.82		35		0.91 - 0.82 = 0.09		0.9 - 0.82 / 0.09 = 0.89
0.97	14		0.91		25		0.82		35		0.91 - 0.82 = 0.09		0.97 - 0.82 / 0.09 = 1.67
0.83	34		0.91		25		0.82		35		0.91 - 0.82 = 0.09		0.83 - 0.82 / 0.09 = 0.11
0.64	50		0.91		25		0.82		35		0.91 - 0.82 = 0.09		0.64 - 0.82 / 0.09 = -2.0
0.966	15		0.9978		12.5	0.953		17.5	0.9978 - 0.953 = 0.0448	0.966 - 0.953 / 0.0448 = 0.29*/

#endif